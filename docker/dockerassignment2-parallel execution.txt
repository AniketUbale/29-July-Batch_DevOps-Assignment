pipeline {
    agent {
        label {
            label "built-in"
            customWorkspace "/mnt/wsp/"
        }
    }
    tools {
        maven "MAVEN"
    }
    stages{
        stage('delete-wsp'){
            steps{
                sh "rm -rf /mnt/wsp/*"
            }
        }
        stage('clone-repo'){
            steps{
                git 'https://github.com/AniketUbale/project.git'
            }
        }
        stage('delete remote-repo'){
            steps{
                sh "rm -rf /root/.m2/*"
            }
        }
        stage('build'){
            steps{
                sh "mvn clean install"
            }
        }
        stage('copy WAR on slaves'){
            steps{
                sshagent(['ssh-key']) {
                    sh "scp -o StrictHostKeyChecking=no /mnt/wsp/target/LoginWebApp.war ec2-user@ec2-13-233-161-189.ap-south-1.compute.amazonaws.com:/home/ec2-user/"
                    sh "scp -o StrictHostKeyChecking=no /mnt/wsp/target/LoginWebApp.war ec2-user@ec2-13-235-135-237.ap-south-1.compute.amazonaws.com:/home/ec2-user/"
                }
            }
        }
         stage('parallel stage'){
            parallel {
                stage('slave-1'){
                    agent {
                        label {
                            label "slave-1"
                            customWorkspace "/home/ec2-user/wsp"
                        }
                    }
                    steps{
                        sh "sudo yum install docker -y"
                        sh "sudo systemctl start docker"
                        sh "sudo mv /home/ec2-user/LoginWebApp.war /home/ec2-user/wsp/"
                        sh "sudo chmod -R 777 /home/ec2-user/wsp/LoginWebApp.war"
                        sh "sudo docker network create netwrk-1"
                        sh "sudo docker build -t tomcat --network netwrk-1 ."
                        sh "sudo docker run -itdp 8080:8080 --name cnt-1 tomcat bash"
                        sh "sudo docker cp /home/ec2-user/wsp/LoginWebApp.war cnt-1:/usr/local/tomcat/webapps/"
                    }
                }
                stage('slave-2'){
                    agent {
                        label {
                            label "slave-2"
                            customWorkspace "/home/ec2-user/wsp"
                        }
                    }
                    steps{
                        sh "sudo yum install docker -y"
                        sh "sudo systemctl start docker"
                        sh "sudo mv /home/ec2-user/LoginWebApp.war /home/ec2-user/wsp/"
                        sh "sudo chmod -R 777 /home/ec2-user/wsp/LoginWebApp.war"
                        sh "sudo docker network create netwrk-1"
                        sh "sudo docker build -t tomcat --network netwrk-1 ."
                        sh "sudo docker run -itdp 8080:8080 --name cnt-1 tomcat bash"
                        sh "sudo docker cp /home/ec2-user/wsp/LoginWebApp.war cnt-1:/usr/local/tomcat/webapps/"
                    }
                }
            }
        }
    }
  }
